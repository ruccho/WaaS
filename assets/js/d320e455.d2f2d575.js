"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87759],{11246:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"core/calling-function","title":"Calling a function","description":"You can call functions exported by a module.","source":"@site/docs/core/calling-function.md","sourceDirName":"core","slug":"/core/calling-function","permalink":"/WaaS/core/calling-function","draft":false,"unlisted":false,"editUrl":"https://github.com/ruccho/WaaS/tree/main/docs/docs/core/calling-function.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Calling a function","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Instantiation","permalink":"/WaaS/core/instantiation"},"next":{"title":"Bindings","permalink":"/WaaS/core/bindings"}}');var a=t(74848),c=t(28453);const s={title:"Calling a function",sidebar_position:3},r=void 0,i={},l=[];function u(n){const e={code:"code",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"You can call functions exported by a module."}),"\n",(0,a.jsxs)(e.p,{children:["Call ",(0,a.jsx)(e.code,{children:"TryGetExport"})," on the instance to get the ",(0,a.jsx)(e.code,{children:"IInvocableFunction"})," interface. You can use this interface to call the function."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:'var module = await moduleAsset.LoadModuleAsync();\nvar instance = new Instance(module, /* */);\n\nif (!instance.TryGetExport("export name", out IInvocableFunction function)) return;\n\nusing var context = new ExecutionContext();\n\nvar result = CoreBinder.Instance.Invoke<int /* result type */>(context, function, 1, 1.0, 1.0f);\nDebug.Log(result);\n'})}),"\n",(0,a.jsxs)(e.p,{children:["Using ",(0,a.jsx)(e.code,{children:"CoreBinder.Instance.Invoke()"}),", you can pass an arbitrary number of arguments to a function without boxing. This uses Source Generators internally."]}),"\n",(0,a.jsx)(e.p,{children:"You can also call functions in a low-level format without using Source Generator."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:"// set args\nSpan<StackValueItem> args = stackalloc StackValueItem[3];\nargs[0] = new StackValueItem(1); // i32\nargs[1] = new StackValueItem(1.0); // f64\nargs[2] = new StackValueItem(1.0f); // f32\n\n// invoke\ncontext.Invoke(function, args);\n\n// take results\nSpan<StackValueItem> results = stackalloc StackValueItem[1];\ncontext.TakeResults(results);\nDebug.Log(results[0]);\n"})})]})}function d(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>r});var o=t(96540);const a={},c=o.createContext(a);function s(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);