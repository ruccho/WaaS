"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32593],{32207:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"component-model/binding-generator/use-generated-code","title":"Using Generated Code","description":"Exposing Interface Implementation to Components","source":"@site/docs/component-model/binding-generator/use-generated-code.mdx","sourceDirName":"component-model/binding-generator","slug":"/component-model/binding-generator/use-generated-code","permalink":"/WaaS/component-model/binding-generator/use-generated-code","draft":false,"unlisted":false,"editUrl":"https://github.com/ruccho/WaaS/tree/main/docs/docs/component-model/binding-generator/use-generated-code.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Using Generated Code","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Attributes","permalink":"/WaaS/component-model/binding-generator/attributes"}}');var r=t(74848),s=t(28453);const a={title:"Using Generated Code",sidebar_position:2},i=void 0,c={},l=[{value:"Exposing Interface Implementation to Components",id:"exposing-interface-implementation-to-components",level:3},{value:"Handling Ownership",id:"handling-ownership",level:3},{value:"Linking Resources to C# Objects",id:"linking-resources-to-c-objects",level:3},{value:"Calling Functions exposed by Components",id:"calling-functions-exposed-by-components",level:3}];function d(e){const n={admonition:"admonition",br:"br",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"exposing-interface-implementation-to-components",children:"Exposing Interface Implementation to Components"}),"\n",(0,r.jsxs)(n.p,{children:["Use the static method ",(0,r.jsx)(n.code,{children:"CreateWaaSInstance()"})," defined as a member of the interface."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// <auto-generated />\n\npartial interface IEnv\n{\n    public static IInstance CreateWaaSInstance(IEnv target);\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"CreateWaaSInstance()"})," is a method that wraps an interface implemented in C# and converts it to ",(0,r.jsx)(n.code,{children:"IInstance"}),".\nBy converting it to ",(0,r.jsx)(n.code,{children:"IInstance"}),", it can be imported when instantiating a component.\nIt can be used when you want to provide the necessary implementation to the component from the C# side."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'var component = LoadComponent();\n\nvar instance = component.Instantiate(null, new Dictionary<string, ISortedExportable>()\n{\n    { "my-game:my-sequencer/env", IEnv.CreateWaaSInstance(new EnvImpl()) }\n});\n\npublic class EnvImpl : IEnv { /* Implement here */ }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"handling-ownership",children:"Handling Ownership"}),"\n",(0,r.jsxs)(n.p,{children:["When ",(0,r.jsx)(n.code,{children:"Owned<T>"})," is passed to C# code as an argument, you need to do one of the following:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Drop ownership by calling ",(0,r.jsx)(n.code,{children:"Owned<T>.Dispose()"})]}),"\n",(0,r.jsxs)(n.li,{children:["Transfer ownership by passing ",(0,r.jsx)(n.code,{children:"Owned<T>"})," to another function"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you do not do this, resources will leak."}),"\n",(0,r.jsx)(n.h3,{id:"linking-resources-to-c-objects",children:"Linking Resources to C# Objects"}),"\n",(0,r.jsx)(n.p,{children:"If you want to provide the implementation of a resource type on the C# side, you can link the resource to a C# object."}),"\n",(0,r.jsxs)(n.p,{children:["To link a resource to a C# object, inherit ",(0,r.jsx)(n.code,{children:"HostResourceTypeBase<T>"})," in the implementation class of the resource type.\nYou can convert the resource type and C# object using the ",(0,r.jsx)(n.code,{children:"Wrap()"})," or ",(0,r.jsx)(n.code,{children:"Unwrap()"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'using WaaS.ComponentModel.Binding;\nusing WaaS.ComponentModel.Runtime;\nusing System;\nusing System.IO;\n\n[ComponentInterface(@"env")]\npublic partial interface IEnv\n{\n    [ComponentResource(@"stream")]\n    public partial interface IStreamResourceImpl : IResourceImpl\n    {\n        [ComponentApi("[constructor]stream")]\n        Owned<IStreamResourceImpl> Create();\n\n        [ComponentApi("[method]stream.write-byte")]\n        void WriteByte(Borrowed<IStreamResourceImpl> self, byte value);\n    }\n}\n\npublic class StreamResourceType : HostResourceTypeBase<Stream>, IEnv.IStreamResourceImpl\n{\n    public Owned<IEnv.IStreamResourceImpl> Create()\n    {\n        var stream = File.Open("hoge.txt", FileMode.Create, FileAccess.Write);\n\n        // Stream -> Owned<IStreamResourceImpl>\n        var handle = Wrap<IEnv.IStreamResourceImpl>(stream);\n\n        return handle;\n    }\n\n    public void WriteByte(Borrowed<IEnv.IStreamResourceImpl> self, byte value)\n    {\n        // Borrowed<IStreamResourceImpl> -> Stream\n        var stream = Unwrap(self);\n\n        stream.WriteByte(value);\n    }\n\n    public IResourceType Type => this;\n}\n\npublic class EnvImpl : IEnv\n{\n    public IEnv.IStreamResourceImpl Stream { get; } = new StreamResourceType();\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["When creating ",(0,r.jsx)(n.code,{children:"Owned<T>"})," with ",(0,r.jsx)(n.code,{children:"Wrap()"}),", the object will be referenced from the internal table.\nBy returning ",(0,r.jsx)(n.code,{children:"Owned<T>"})," as a return value, the reference will be released when the resource is no longer needed."]})}),"\n",(0,r.jsx)(n.h3,{id:"calling-functions-exposed-by-components",children:"Calling Functions exposed by Components"}),"\n",(0,r.jsxs)(n.p,{children:["You can use a struct ",(0,r.jsx)(n.code,{children:"Wrapper"})," defined as a member of the interface by the Source Generator."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"// <auto-generated />\n\npartial interface IEnv\n{\n    public readonly struct Wrapper : IEnv\n    {\n        public Wrapper(IInstance instance, ExecutionContext context);\n\n        public ValueTask ShowMessage(string @speaker, string @message);\n        public ValueTask<uint> ShowOptions(ReadOnlyMemory<string> @options)\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Wrapper"})," is a struct that wraps externally created ",(0,r.jsx)(n.code,{children:"IInstance"})," and converts it to ",(0,r.jsx)(n.code,{children:"IEnv"}),".",(0,r.jsx)(n.br,{}),"\n","It is assumed that the target instance exports functions that correspond to ",(0,r.jsx)(n.code,{children:"IEnv"})," (no automatic check is performed).",(0,r.jsx)(n.br,{}),"\n","It can be used when calling functions exported by components from C#."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'var component = await componentAsset.LoadComponentAsync();\n\nvar instance = component.Instantiate(null, new Dictionary<string, ISortedExportable>());\n\nusing var context = new ExecutionContext();\n\nvar wrapper = new IEnv.Wrapper(instance, context);\n\nawait wraapper.ShowMessage("Me", "Hello");\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(96540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);