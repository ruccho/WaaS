"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57439],{40275:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"getting-started/unity-rust","title":"Unity and Rust Tutorial","description":"In this tutorial, we will compile Rust to WebAssembly and run it in Unity.","source":"@site/docs/getting-started/unity-rust.md","sourceDirName":"getting-started","slug":"/getting-started/unity-rust","permalink":"/WaaS/getting-started/unity-rust","draft":false,"unlisted":false,"editUrl":"https://github.com/ruccho/WaaS/tree/main/docs/docs/getting-started/unity-rust.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Unity and Rust Tutorial","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/WaaS/getting-started/installation"},"next":{"title":"Component Model Tutorial","permalink":"/WaaS/getting-started/component-model"}}');var a=n(74848),i=n(28453);const o={title:"Unity and Rust Tutorial",sidebar_position:2},r=void 0,c={},d=[{value:"1. Install Rust toolchain and add the <code>wasm32-unknown-unknown</code> target.",id:"1-install-rust-toolchain-and-add-the-wasm32-unknown-unknown-target",level:4},{value:"2. Install WaaS in your Unity project.",id:"2-install-waas-in-your-unity-project",level:4},{value:"3. Create <code>main.rs</code> in your Unity project:",id:"3-create-mainrs-in-your-unity-project",level:4},{value:"4. Create a C# script <code>Test.cs</code> that runs the <code>add()</code> function:",id:"4-create-a-c-script-testcs-that-runs-the-add-function",level:4},{value:"5. Attach <code>Test.cs</code> to a GameObject in your scene and assign <code>ModuleAsset</code> to the script.",id:"5-attach-testcs-to-a-gameobject-in-your-scene-and-assign-moduleasset-to-the-script",level:4}];function l(t){const e={a:"a",code:"code",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"In this tutorial, we will compile Rust to WebAssembly and run it in Unity."}),"\n",(0,a.jsxs)(e.p,{children:["WaaS can import WebAssembly modules, but you can also import Rust files directly and compile them into WebAssembly modules on the spot. This method does not allow you to manage dependencies with ",(0,a.jsx)(e.code,{children:"cargo"}),"."]}),"\n",(0,a.jsxs)(e.h4,{id:"1-install-rust-toolchain-and-add-the-wasm32-unknown-unknown-target",children:["1. Install ",(0,a.jsx)(e.a,{href:"https://www.rust-lang.org/ja/learn/get-started",children:"Rust toolchain"})," and add the ",(0,a.jsx)(e.code,{children:"wasm32-unknown-unknown"})," target."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-sh",children:"rustup target add wasm32-unknown-unknown\n"})}),"\n",(0,a.jsxs)(e.h4,{id:"2-install-waas-in-your-unity-project",children:["2. ",(0,a.jsx)(e.a,{href:"/WaaS/getting-started/installation",children:"Install WaaS"})," in your Unity project."]}),"\n",(0,a.jsxs)(e.h4,{id:"3-create-mainrs-in-your-unity-project",children:["3. Create ",(0,a.jsx)(e.code,{children:"main.rs"})," in your Unity project:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-rust",children:'#[no_mangle]\npub extern "C" fn add(a: i32, b: i32) {\n    a + b\n}\n'})}),"\n",(0,a.jsxs)(e.h4,{id:"4-create-a-c-script-testcs-that-runs-the-add-function",children:["4. Create a C# script ",(0,a.jsx)(e.code,{children:"Test.cs"})," that runs the ",(0,a.jsx)(e.code,{children:"add()"})," function:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:'using System;\nusing UnityEngine;\nusing WaaS.Runtime;\nusing WaaS.Unity;\n\npublic class Test : MonoBehaviour\n{\n    [SerializeField] private ModuleAsset moduleAsset; // imported main.rs\n\n    private void Start()\n    {\n        // Load the module\n        var module = moduleAsset.LoadModule();\n\n        // Instantiation\n        var instance = new Instance(module, new Imports());\n\n        // Get the exported function\n        var function = instance.ExportInstance.Items["add"] as IInvocableFunction;\n\n        // Create ExecutionContext\n        using var context = new ExecutionContext();\n\n        // Invocation\n        var result = CoreBinder.Instance.Invoke<int>(function, 1, 2);\n\n        Debug.Log($"Completed: 1 + 2 = {result}"); // Completed: 1 + 2 = 3\n    }\n}\n'})}),"\n",(0,a.jsxs)(e.h4,{id:"5-attach-testcs-to-a-gameobject-in-your-scene-and-assign-moduleasset-to-the-script",children:["5. Attach ",(0,a.jsx)(e.code,{children:"Test.cs"})," to a GameObject in your scene and assign ",(0,a.jsx)(e.code,{children:"ModuleAsset"})," to the script."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"> Completed: 1 + 2 = 3\n"})})]})}function u(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>r});var s=n(96540);const a={},i=s.createContext(a);function o(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);