// <auto-generated />
#nullable enable
namespace Wasi.Sockets
{
    [global::WaaS.ComponentModel.Binding.ComponentInterface]
    public partial interface Udp
    {
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.startBind(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self, global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Network.Network> network, Wasi.Sockets.Network.IpSocketAddress localAddress);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.finishBind(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Sockets.Udp.IncomingDatagramStream>, global::WaaS.ComponentModel.Runtime.Owned<Wasi.Sockets.Udp.OutgoingDatagramStream>), Wasi.Sockets.Network.ErrorCode> [method]udpSocket.stream(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self, global::WaaS.ComponentModel.Binding.Option<Wasi.Sockets.Network.IpSocketAddress> remoteAddress);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Sockets.Network.IpSocketAddress, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.localAddress(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Sockets.Network.IpSocketAddress, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.remoteAddress(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        Wasi.Sockets.Network.IpAddressFamily [method]udpSocket.addressFamily(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<byte, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.unicastHopLimit(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.setUnicastHopLimit(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self, byte value);
        global::WaaS.ComponentModel.Binding.Result<ulong, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.receiveBufferSize(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.setReceiveBufferSize(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self, ulong value);
        global::WaaS.ComponentModel.Binding.Result<ulong, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.sendBufferSize(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Sockets.Network.ErrorCode> [method]udpSocket.setSendBufferSize(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self, ulong value);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Poll.Pollable> [method]udpSocket.subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.UdpSocket> self);
        global::WaaS.ComponentModel.Binding.Result<global::System.ReadOnlyMemory<Wasi.Sockets.Udp.IncomingDatagram>, Wasi.Sockets.Network.ErrorCode> [method]incomingDatagramStream.receive(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.IncomingDatagramStream> self, ulong maxResults);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Poll.Pollable> [method]incomingDatagramStream.subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.IncomingDatagramStream> self);
        global::WaaS.ComponentModel.Binding.Result<ulong, Wasi.Sockets.Network.ErrorCode> [method]outgoingDatagramStream.checkSend(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.OutgoingDatagramStream> self);
        global::WaaS.ComponentModel.Binding.Result<ulong, Wasi.Sockets.Network.ErrorCode> [method]outgoingDatagramStream.send(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.OutgoingDatagramStream> self, global::System.ReadOnlyMemory<Wasi.Sockets.Udp.OutgoingDatagram> datagrams);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Poll.Pollable> [method]outgoingDatagramStream.subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Sockets.Udp.OutgoingDatagramStream> self);
    }
}
