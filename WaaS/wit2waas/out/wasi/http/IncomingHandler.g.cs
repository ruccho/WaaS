// <auto-generated />
#nullable enable

namespace Wasi.Http
{
    // interface incoming-handler
    /// <summary>
    ///     This interface defines a handler of incoming HTTP Requests. It should
    ///     be exported by components which can respond to HTTP Requests.
    /// </summary>
    [global::WaaS.ComponentModel.Binding.ComponentInterface(@"incoming-handler")]
    public partial interface IIncomingHandler
    {
        /// <summary>
        ///     This function is invoked with an incoming HTTP Request, and a resource
        ///     `response-outparam` which provides the capability to reply with an HTTP
        ///     Response. The response is sent by calling the `response-outparam.set`
        ///     method, which allows execution to continue after the response has been
        ///     sent. This enables both streaming to the response body, and performing other
        ///     work.
        ///     
        ///     The implementor of this function must write a response to the
        ///     `response-outparam` before returning, or else the caller will respond
        ///     with an error on its behalf.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"handle")]
        global::System.Threading.Tasks.ValueTask Handle(global::WaaS.ComponentModel.Binding.Owned<Wasi.Http.ITypes.IIncomingRequestResourceImpl> @request, global::WaaS.ComponentModel.Binding.Owned<Wasi.Http.ITypes.IResponseOutparamResourceImpl> @responseOut);

    }
}
