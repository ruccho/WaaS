// <auto-generated />
#nullable enable
namespace Wasi.Http
{
    [global::WaaS.ComponentModel.Binding.ComponentInterface]
    public partial interface Types
    {
        global::WaaS.ComponentModel.Binding.Option<Wasi.Http.Types.ErrorCode> HttpErrorCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Io.Error.Error> err);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> [constructor]fields();
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields>, Wasi.Http.Types.HeaderError> [static]fields.fromList(global::System.ReadOnlyMemory<(string, global::System.ReadOnlyMemory<byte>)> entries);
        global::System.ReadOnlyMemory<global::System.ReadOnlyMemory<byte>> [method]fields.get(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self, string name);
        bool [method]fields.has(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self, string name);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.Types.HeaderError> [method]fields.set(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self, string name, global::System.ReadOnlyMemory<global::System.ReadOnlyMemory<byte>> value);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.Types.HeaderError> [method]fields.delete(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self, string name);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.Types.HeaderError> [method]fields.append(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self, string name, global::System.ReadOnlyMemory<byte> value);
        global::System.ReadOnlyMemory<(string, global::System.ReadOnlyMemory<byte>)> [method]fields.entries(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> [method]fields.clone(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.Fields> self);
        Wasi.Http.Types.Method [method]incomingRequest.method(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingRequest> self);
        global::WaaS.ComponentModel.Binding.Option<string> [method]incomingRequest.pathWithQuery(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingRequest> self);
        global::WaaS.ComponentModel.Binding.Option<Wasi.Http.Types.Scheme> [method]incomingRequest.scheme(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingRequest> self);
        global::WaaS.ComponentModel.Binding.Option<string> [method]incomingRequest.authority(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingRequest> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> [method]incomingRequest.headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingRequest> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.IncomingBody>, global::WaaS.ComponentModel.Binding.None> [method]incomingRequest.consume(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingRequest> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.OutgoingRequest> [constructor]outgoingRequest(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> headers);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.OutgoingBody>, global::WaaS.ComponentModel.Binding.None> [method]outgoingRequest.body(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self);
        Wasi.Http.Types.Method [method]outgoingRequest.method(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]outgoingRequest.setMethod(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self, Wasi.Http.Types.Method method);
        global::WaaS.ComponentModel.Binding.Option<string> [method]outgoingRequest.pathWithQuery(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]outgoingRequest.setPathWithQuery(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self, global::WaaS.ComponentModel.Binding.Option<string> pathWithQuery);
        global::WaaS.ComponentModel.Binding.Option<Wasi.Http.Types.Scheme> [method]outgoingRequest.scheme(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]outgoingRequest.setScheme(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self, global::WaaS.ComponentModel.Binding.Option<Wasi.Http.Types.Scheme> scheme);
        global::WaaS.ComponentModel.Binding.Option<string> [method]outgoingRequest.authority(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]outgoingRequest.setAuthority(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self, global::WaaS.ComponentModel.Binding.Option<string> authority);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> [method]outgoingRequest.headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingRequest> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.RequestOptions> [constructor]requestOptions();
        global::WaaS.ComponentModel.Binding.Option<ulong> [method]requestOptions.connectTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.RequestOptions> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]requestOptions.setConnectTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.RequestOptions> self, global::WaaS.ComponentModel.Binding.Option<ulong> duration);
        global::WaaS.ComponentModel.Binding.Option<ulong> [method]requestOptions.firstByteTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.RequestOptions> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]requestOptions.setFirstByteTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.RequestOptions> self, global::WaaS.ComponentModel.Binding.Option<ulong> duration);
        global::WaaS.ComponentModel.Binding.Option<ulong> [method]requestOptions.betweenBytesTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.RequestOptions> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]requestOptions.setBetweenBytesTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.RequestOptions> self, global::WaaS.ComponentModel.Binding.Option<ulong> duration);
        void [static]responseOutparam.set(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.ResponseOutparam> param, global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.OutgoingResponse>, Wasi.Http.Types.ErrorCode> response);
        ushort [method]incomingResponse.status(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingResponse> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> [method]incomingResponse.headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingResponse> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.IncomingBody>, global::WaaS.ComponentModel.Binding.None> [method]incomingResponse.consume(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingResponse> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Streams.InputStream>, global::WaaS.ComponentModel.Binding.None> [method]incomingBody.stream(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.IncomingBody> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.FutureTrailers> [static]incomingBody.finish(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.IncomingBody> this);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Poll.Pollable> [method]futureTrailers.subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.FutureTrailers> self);
        global::WaaS.ComponentModel.Binding.Option<global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.Option<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields>>, Wasi.Http.Types.ErrorCode>, global::WaaS.ComponentModel.Binding.None>> [method]futureTrailers.get(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.FutureTrailers> self);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.OutgoingResponse> [constructor]outgoingResponse(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> headers);
        ushort [method]outgoingResponse.statusCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingResponse> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> [method]outgoingResponse.setStatusCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingResponse> self, ushort statusCode);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields> [method]outgoingResponse.headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingResponse> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.OutgoingBody>, global::WaaS.ComponentModel.Binding.None> [method]outgoingResponse.body(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingResponse> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Streams.OutputStream>, global::WaaS.ComponentModel.Binding.None> [method]outgoingBody.write(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.OutgoingBody> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.Types.ErrorCode> [static]outgoingBody.finish(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.OutgoingBody> this, global::WaaS.ComponentModel.Binding.Option<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.Fields>> trailers);
        global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Poll.Pollable> [method]futureIncomingResponse.subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.FutureIncomingResponse> self);
        global::WaaS.ComponentModel.Binding.Option<global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.Types.IncomingResponse>, Wasi.Http.Types.ErrorCode>, global::WaaS.ComponentModel.Binding.None>> [method]futureIncomingResponse.get(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.Types.FutureIncomingResponse> self);
    }
}
