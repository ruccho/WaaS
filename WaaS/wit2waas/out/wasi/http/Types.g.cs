// <auto-generated />
#nullable enable

namespace Wasi.Http
{
    /// <summary>
    ///     This interface defines all of the types and methods for implementing
    ///     HTTP Requests and Responses, both incoming and outgoing, as well as
    ///     their headers, trailers, and bodies.
    /// </summary>
    [global::WaaS.ComponentModel.Binding.ComponentInterface(@"types")]
    public partial interface ITypes
    {
        /// <summary>
        ///     Attempts to extract a http-related `error` from the wasi:io `error`
        ///     provided.
        ///     
        ///     Stream operations which return
        ///     `wasi:io/stream/stream-error::last-operation-failed` have a payload of
        ///     type `wasi:io/error/error` with more information about the operation
        ///     that failed. This payload can be passed through to this function to see
        ///     if there's http-related information about the error to return.
        ///     
        ///     Note that this function is fallible because not all io-errors are
        ///     http-related errors.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"http-error-code")]
        Wasi.Http.ITypes.ErrorCode? HttpErrorCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Io.IError.IErrorResource> @err);

        /// <summary>
        ///     This type corresponds to HTTP standard Methods.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentVariant]
        public readonly partial struct Method
        {
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Get { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Head { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Post { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Put { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Delete { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Connect { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Options { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Trace { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Patch { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string> Other { get; init; }
        }

        /// <summary>
        ///     This type corresponds to HTTP standard Related Schemes.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentVariant]
        public readonly partial struct Scheme
        {
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTP { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPS { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string> Other { get; init; }
        }

        /// <summary>
        ///     Defines the case payload type for `DNS-error` above:
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentRecord]
        public readonly partial struct DNSErrorPayload
        {
            [global::WaaS.ComponentModel.Binding.ComponentFieldAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string> Rcode { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentFieldAttribute]
            public ushort? InfoCode { get; init; }
        }

        /// <summary>
        ///     Defines the case payload type for `TLS-alert-received` above:
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentRecord]
        public readonly partial struct TLSAlertReceivedPayload
        {
            [global::WaaS.ComponentModel.Binding.ComponentFieldAttribute]
            public byte? AlertId { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentFieldAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string> AlertMessage { get; init; }
        }

        /// <summary>
        ///     Defines the case payload type for `HTTP-response-{header,trailer}-size` above:
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentRecord]
        public readonly partial struct FieldSizePayload
        {
            [global::WaaS.ComponentModel.Binding.ComponentFieldAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string> FieldName { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentFieldAttribute]
            public uint? FieldSize { get; init; }
        }

        /// <summary>
        ///     These cases are inspired by the IANA HTTP Proxy Error Types:
        ///     https://www.iana.org/assignments/http-proxy-status/http-proxy-status.xhtml#table-http-proxy-error-types
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentVariant]
        public readonly partial struct ErrorCode
        {
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? DNSTimeout { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public Wasi.Http.ITypes.DNSErrorPayload? DNSError { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? DestinationNotFound { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? DestinationUnavailable { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? DestinationIPProhibited { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? DestinationIPUnroutable { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConnectionRefused { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConnectionTerminated { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConnectionTimeout { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConnectionReadTimeout { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConnectionWriteTimeout { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConnectionLimitReached { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? TLSProtocolError { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? TLSCertificateError { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public Wasi.Http.ITypes.TLSAlertReceivedPayload? TLSAlertReceived { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPRequestDenied { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPRequestLengthRequired { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<ulong?> HTTPRequestBodySize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPRequestMethodInvalid { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPRequestURIInvalid { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPRequestURITooLong { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<uint?> HTTPRequestHeaderSectionSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<Wasi.Http.ITypes.FieldSizePayload?> HTTPRequestHeaderSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<uint?> HTTPRequestTrailerSectionSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public Wasi.Http.ITypes.FieldSizePayload? HTTPRequestTrailerSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPResponseIncomplete { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<uint?> HTTPResponseHeaderSectionSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public Wasi.Http.ITypes.FieldSizePayload? HTTPResponseHeaderSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<ulong?> HTTPResponseBodySize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<uint?> HTTPResponseTrailerSectionSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public Wasi.Http.ITypes.FieldSizePayload? HTTPResponseTrailerSize { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string>? HTTPResponseTransferCoding { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string>? HTTPResponseContentCoding { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPResponseTimeout { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPUpgradeFailed { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? HTTPProtocolError { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? LoopDetected { get; init; }
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? ConfigurationError { get; init; }
            /// <summary>
            ///     This is a catch-all error for anything that doesn't fit cleanly into a
            ///     more specific case. It also includes an optional string for an
            ///     unstructured description of the error. Users should not depend on the
            ///     string for diagnosing errors, as it's not required to be consistent
            ///     between implementations.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.Option<string>? InternalError { get; init; }
        }

        /// <summary>
        ///     This type enumerates the different kinds of errors that may occur when
        ///     setting or appending to a `fields` resource.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentVariant]
        public readonly partial struct HeaderError
        {
            /// <summary>
            ///     This error indicates that a `field-name` or `field-value` was
            ///     syntactically invalid when used with an operation that sets headers in a
            ///     `fields`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? InvalidSyntax { get; init; }
            /// <summary>
            ///     This error indicates that a forbidden `field-name` was used when trying
            ///     to set a header in a `fields`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Forbidden { get; init; }
            /// <summary>
            ///     This error indicates that the operation on the `fields` was not
            ///     permitted because the fields are immutable.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentCaseAttribute]
            public global::WaaS.ComponentModel.Binding.None? Immutable { get; init; }
        }

        /// <summary>
        ///     Field keys are always strings.
        ///     
        ///     Field keys should always be treated as case insensitive by the `fields`
        ///     resource for the purposes of equality checking.
        ///     
        ///     # Deprecation
        ///     
        ///     This type has been deprecated in favor of the `field-name` type.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentAlias(typeof(string))]
        public readonly partial struct FieldKey
        {
            private readonly string value;
            private FieldKey (string value) => this.value = value;
            public static implicit operator FieldKey(string value) => new (value);
            public static implicit operator string(FieldKey value) => value.value;
        }

        /// <summary>
        ///     Field names are always strings.
        ///     
        ///     Field names should always be treated as case insensitive by the `fields`
        ///     resource for the purposes of equality checking.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentAlias(typeof(Wasi.Http.ITypes.FieldKey))]
        public readonly partial struct FieldName
        {
            private readonly Wasi.Http.ITypes.FieldKey value;
            private FieldName (Wasi.Http.ITypes.FieldKey value) => this.value = value;
            public static implicit operator FieldName(Wasi.Http.ITypes.FieldKey value) => new (value);
            public static implicit operator Wasi.Http.ITypes.FieldKey(FieldName value) => value.value;
        }

        /// <summary>
        ///     Field values should always be ASCII strings. However, in
        ///     reality, HTTP implementations often have to interpret malformed values,
        ///     so they are provided as a list of bytes.
        /// </summary>
        // field-value

        /// <summary>
        ///     This following block defines the `fields` resource which corresponds to
        ///     HTTP standard Fields. Fields are a common representation used for both
        ///     Headers and Trailers.
        ///     
        ///     A `fields` may be mutable or immutable. A `fields` created using the
        ///     constructor, `from-list`, or `clone` will be mutable, but a `fields`
        ///     resource given by other means (including, but not limited to,
        ///     `incoming-request.headers`, `outgoing-request.headers`) might be be
        ///     immutable. In an immutable fields, the `set`, `append`, and `delete`
        ///     operations will fail with `header-error.immutable`.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IFieldsResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Construct an empty HTTP Fields.
            ///     
            ///     The resulting `fields` is mutable.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[constructor]fields")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> Fields();

            /// <summary>
            ///     Construct an HTTP Fields.
            ///     
            ///     The resulting `fields` is mutable.
            ///     
            ///     The list represents each name-value pair in the Fields. Names
            ///     which have multiple values are represented by multiple entries in this
            ///     list with the same name.
            ///     
            ///     The tuple is a pair of the field name, represented as a string, and
            ///     Value, represented as a list of bytes.
            ///     
            ///     An error result will be returned if any `field-name` or `field-value` is
            ///     syntactically invalid, or if a field is forbidden.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[static]fields.from-list")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource>, Wasi.Http.ITypes.HeaderError> FromList(global::System.ReadOnlyMemory<(Wasi.Http.ITypes.FieldName, global::System.ReadOnlyMemory<byte>)> @entries);

            /// <summary>
            ///     Get all of the values corresponding to a name. If the name is not present
            ///     in this `fields` or is syntactically invalid, an empty list is returned.
            ///     However, if the name is present but empty, this is represented by a list
            ///     with one or more empty field-values present.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.get")]
            global::System.ReadOnlyMemory<global::System.ReadOnlyMemory<byte>> Get(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self, Wasi.Http.ITypes.FieldName @name);

            /// <summary>
            ///     Returns `true` when the name is present in this `fields`. If the name is
            ///     syntactically invalid, `false` is returned.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.has")]
            bool Has(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self, Wasi.Http.ITypes.FieldName @name);

            /// <summary>
            ///     Set all of the values for a name. Clears any existing values for that
            ///     name, if they have been set.
            ///     
            ///     Fails with `header-error.immutable` if the `fields` are immutable.
            ///     
            ///     Fails with `header-error.invalid-syntax` if the `field-name` or any of
            ///     the `field-value`s are syntactically invalid.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.set")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.ITypes.HeaderError> Set(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self, Wasi.Http.ITypes.FieldName @name, global::System.ReadOnlyMemory<global::System.ReadOnlyMemory<byte>> @value);

            /// <summary>
            ///     Delete all values for a name. Does nothing if no values for the name
            ///     exist.
            ///     
            ///     Fails with `header-error.immutable` if the `fields` are immutable.
            ///     
            ///     Fails with `header-error.invalid-syntax` if the `field-name` is
            ///     syntactically invalid.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.delete")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.ITypes.HeaderError> Delete(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self, Wasi.Http.ITypes.FieldName @name);

            /// <summary>
            ///     Append a value for a name. Does not change or delete any existing
            ///     values for that name.
            ///     
            ///     Fails with `header-error.immutable` if the `fields` are immutable.
            ///     
            ///     Fails with `header-error.invalid-syntax` if the `field-name` or
            ///     `field-value` are syntactically invalid.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.append")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.ITypes.HeaderError> Append(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self, Wasi.Http.ITypes.FieldName @name, global::System.ReadOnlyMemory<byte> @value);

            /// <summary>
            ///     Retrieve the full set of names and values in the Fields. Like the
            ///     constructor, the list represents each name-value pair.
            ///     
            ///     The outer list represents each name-value pair in the Fields. Names
            ///     which have multiple values are represented by multiple entries in this
            ///     list with the same name.
            ///     
            ///     The names and values are always returned in the original casing and in
            ///     the order in which they will be serialized for transport.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.entries")]
            global::System.ReadOnlyMemory<(Wasi.Http.ITypes.FieldName, global::System.ReadOnlyMemory<byte>)> Entries(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self);

            /// <summary>
            ///     Make a deep copy of the Fields. Equivalent in behavior to calling the
            ///     `fields` constructor on the return value of `entries`. The resulting
            ///     `fields` is mutable.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]fields.clone")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> Clone(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFieldsResource> @self);

        }

        /// <summary>
        ///     Headers is an alias for Fields.
        /// </summary>
        /// <summary>
        ///     Trailers is an alias for Fields.
        /// </summary>
        /// <summary>
        ///     Represents an incoming HTTP Request.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IIncomingRequestResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Returns the method of the incoming request.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-request.method")]
            Wasi.Http.ITypes.Method Method(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingRequestResource> @self);

            /// <summary>
            ///     Returns the path with query parameters from the request, as a string.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-request.path-with-query")]
            global::WaaS.ComponentModel.Binding.Option<string> PathWithQuery(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingRequestResource> @self);

            /// <summary>
            ///     Returns the protocol scheme from the request.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-request.scheme")]
            Wasi.Http.ITypes.Scheme? Scheme(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingRequestResource> @self);

            /// <summary>
            ///     Returns the authority of the Request's target URI, if present.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-request.authority")]
            global::WaaS.ComponentModel.Binding.Option<string> Authority(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingRequestResource> @self);

            /// <summary>
            ///     Get the `headers` associated with the request.
            ///     
            ///     The returned `headers` resource is immutable: `set`, `append`, and
            ///     `delete` operations will fail with `header-error.immutable`.
            ///     
            ///     The `headers` returned are a child resource: it must be dropped before
            ///     the parent `incoming-request` is dropped. Dropping this
            ///     `incoming-request` before all children are dropped will trap.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-request.headers")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> Headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingRequestResource> @self);

            /// <summary>
            ///     Gives the `incoming-body` associated with this request. Will only
            ///     return success at most once, and subsequent calls will return error.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-request.consume")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IIncomingBodyResource>, global::WaaS.ComponentModel.Binding.None> Consume(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingRequestResource> @self);

        }

        /// <summary>
        ///     Represents an outgoing HTTP Request.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IOutgoingRequestResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Construct a new `outgoing-request` with a default `method` of `GET`, and
            ///     `none` values for `path-with-query`, `scheme`, and `authority`.
            ///     
            ///     * `headers` is the HTTP Headers for the Request.
            ///     
            ///     It is possible to construct, or manipulate with the accessor functions
            ///     below, an `outgoing-request` with an invalid combination of `scheme`
            ///     and `authority`, or `headers` which are not permitted to be sent.
            ///     It is the obligation of the `outgoing-handler.handle` implementation
            ///     to reject invalid constructions of `outgoing-request`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[constructor]outgoing-request")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IOutgoingRequestResource> OutgoingRequest(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> @headers);

            /// <summary>
            ///     Returns the resource corresponding to the outgoing Body for this
            ///     Request.
            ///     
            ///     Returns success on the first call: the `outgoing-body` resource for
            ///     this `outgoing-request` can be retrieved at most once. Subsequent
            ///     calls will return error.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.body")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IOutgoingBodyResource>, global::WaaS.ComponentModel.Binding.None> Body(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self);

            /// <summary>
            ///     Get the Method for the Request.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.method")]
            Wasi.Http.ITypes.Method Method(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self);

            /// <summary>
            ///     Set the Method for the Request. Fails if the string present in a
            ///     `method.other` argument is not a syntactically valid method.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.set-method")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetMethod(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self, Wasi.Http.ITypes.Method @method);

            /// <summary>
            ///     Get the combination of the HTTP Path and Query for the Request.
            ///     When `none`, this represents an empty Path and empty Query.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.path-with-query")]
            global::WaaS.ComponentModel.Binding.Option<string> PathWithQuery(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self);

            /// <summary>
            ///     Set the combination of the HTTP Path and Query for the Request.
            ///     When `none`, this represents an empty Path and empty Query. Fails is the
            ///     string given is not a syntactically valid path and query uri component.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.set-path-with-query")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetPathWithQuery(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self, global::WaaS.ComponentModel.Binding.Option<string> @pathWithQuery);

            /// <summary>
            ///     Get the HTTP Related Scheme for the Request. When `none`, the
            ///     implementation may choose an appropriate default scheme.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.scheme")]
            Wasi.Http.ITypes.Scheme? Scheme(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self);

            /// <summary>
            ///     Set the HTTP Related Scheme for the Request. When `none`, the
            ///     implementation may choose an appropriate default scheme. Fails if the
            ///     string given is not a syntactically valid uri scheme.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.set-scheme")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetScheme(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self, Wasi.Http.ITypes.Scheme? @scheme);

            /// <summary>
            ///     Get the authority of the Request's target URI. A value of `none` may be used
            ///     with Related Schemes which do not require an authority. The HTTP and
            ///     HTTPS schemes always require an authority.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.authority")]
            global::WaaS.ComponentModel.Binding.Option<string> Authority(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self);

            /// <summary>
            ///     Set the authority of the Request's target URI. A value of `none` may be used
            ///     with Related Schemes which do not require an authority. The HTTP and
            ///     HTTPS schemes always require an authority. Fails if the string given is
            ///     not a syntactically valid URI authority.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.set-authority")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetAuthority(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self, global::WaaS.ComponentModel.Binding.Option<string> @authority);

            /// <summary>
            ///     Get the headers associated with the Request.
            ///     
            ///     The returned `headers` resource is immutable: `set`, `append`, and
            ///     `delete` operations will fail with `header-error.immutable`.
            ///     
            ///     This headers resource is a child: it must be dropped before the parent
            ///     `outgoing-request` is dropped, or its ownership is transferred to
            ///     another component by e.g. `outgoing-handler.handle`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-request.headers")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> Headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingRequestResource> @self);

        }

        /// <summary>
        ///     Parameters for making an HTTP Request. Each of these parameters is
        ///     currently an optional timeout applicable to the transport layer of the
        ///     HTTP protocol.
        ///     
        ///     These timeouts are separate from any the user may use to bound a
        ///     blocking call to `wasi:io/poll.poll`.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IRequestOptionsResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Construct a default `request-options` value.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[constructor]request-options")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IRequestOptionsResource> RequestOptions();

            /// <summary>
            ///     The timeout for the initial connect to the HTTP Server.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]request-options.connect-timeout")]
            Wasi.Clocks.IMonotonicClock.Duration? ConnectTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IRequestOptionsResource> @self);

            /// <summary>
            ///     Set the timeout for the initial connect to the HTTP Server. An error
            ///     return value indicates that this timeout is not supported.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]request-options.set-connect-timeout")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetConnectTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IRequestOptionsResource> @self, Wasi.Clocks.IMonotonicClock.Duration? @duration);

            /// <summary>
            ///     The timeout for receiving the first byte of the Response body.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]request-options.first-byte-timeout")]
            Wasi.Clocks.IMonotonicClock.Duration? FirstByteTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IRequestOptionsResource> @self);

            /// <summary>
            ///     Set the timeout for receiving the first byte of the Response body. An
            ///     error return value indicates that this timeout is not supported.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]request-options.set-first-byte-timeout")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetFirstByteTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IRequestOptionsResource> @self, Wasi.Clocks.IMonotonicClock.Duration? @duration);

            /// <summary>
            ///     The timeout for receiving subsequent chunks of bytes in the Response
            ///     body stream.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]request-options.between-bytes-timeout")]
            Wasi.Clocks.IMonotonicClock.Duration? BetweenBytesTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IRequestOptionsResource> @self);

            /// <summary>
            ///     Set the timeout for receiving subsequent chunks of bytes in the Response
            ///     body stream. An error return value indicates that this timeout is not
            ///     supported.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]request-options.set-between-bytes-timeout")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetBetweenBytesTimeout(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IRequestOptionsResource> @self, Wasi.Clocks.IMonotonicClock.Duration? @duration);

        }

        /// <summary>
        ///     Represents the ability to send an HTTP Response.
        ///     
        ///     This resource is used by the `wasi:http/incoming-handler` interface to
        ///     allow a Response to be sent corresponding to the Request provided as the
        ///     other argument to `incoming-handler.handle`.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IResponseOutparamResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Set the value of the `response-outparam` to either send a response,
            ///     or indicate an error.
            ///     
            ///     This method consumes the `response-outparam` to ensure that it is
            ///     called at most once. If it is never called, the implementation
            ///     will respond with an error.
            ///     
            ///     The user may provide an `error` to `response` to allow the
            ///     implementation determine how to respond with an HTTP error response.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[static]response-outparam.set")]
            void Set(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IResponseOutparamResource> @param, global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IOutgoingResponseResource>, Wasi.Http.ITypes.ErrorCode> @response);

        }

        /// <summary>
        ///     This type corresponds to the HTTP standard Status Code.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentAlias(typeof(ushort))]
        public readonly partial struct StatusCode
        {
            private readonly ushort value;
            private StatusCode (ushort value) => this.value = value;
            public static implicit operator StatusCode(ushort value) => new (value);
            public static implicit operator ushort(StatusCode value) => value.value;
        }

        /// <summary>
        ///     Represents an incoming HTTP Response.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IIncomingResponseResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Returns the status code from the incoming response.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-response.status")]
            Wasi.Http.ITypes.StatusCode Status(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingResponseResource> @self);

            /// <summary>
            ///     Returns the headers from the incoming response.
            ///     
            ///     The returned `headers` resource is immutable: `set`, `append`, and
            ///     `delete` operations will fail with `header-error.immutable`.
            ///     
            ///     This headers resource is a child: it must be dropped before the parent
            ///     `incoming-response` is dropped.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-response.headers")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> Headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingResponseResource> @self);

            /// <summary>
            ///     Returns the incoming body. May be called at most once. Returns error
            ///     if called additional times.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-response.consume")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IIncomingBodyResource>, global::WaaS.ComponentModel.Binding.None> Consume(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingResponseResource> @self);

        }

        /// <summary>
        ///     Represents an incoming HTTP Request or Response's Body.
        ///     
        ///     A body has both its contents - a stream of bytes - and a (possibly
        ///     empty) set of trailers, indicating that the full contents of the
        ///     body have been received. This resource represents the contents as
        ///     an `input-stream` and the delivery of trailers as a `future-trailers`,
        ///     and ensures that the user of this interface may only be consuming either
        ///     the body contents or waiting on trailers at any given time.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IIncomingBodyResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Returns the contents of the body, as a stream of bytes.
            ///     
            ///     Returns success on first call: the stream representing the contents
            ///     can be retrieved at most once. Subsequent calls will return error.
            ///     
            ///     The returned `input-stream` resource is a child: it must be dropped
            ///     before the parent `incoming-body` is dropped, or consumed by
            ///     `incoming-body.finish`.
            ///     
            ///     This invariant ensures that the implementation can determine whether
            ///     the user is consuming the contents of the body, waiting on the
            ///     `future-trailers` to be ready, or neither. This allows for network
            ///     backpressure is to be applied when the user is consuming the body,
            ///     and for that backpressure to not inhibit delivery of the trailers if
            ///     the user does not read the entire body.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]incoming-body.stream")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.IStreams.IInputStreamResource>, global::WaaS.ComponentModel.Binding.None> Stream(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IIncomingBodyResource> @self);

            /// <summary>
            ///     Takes ownership of `incoming-body`, and returns a `future-trailers`.
            ///     This function will trap if the `input-stream` child is still alive.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[static]incoming-body.finish")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFutureTrailersResource> Finish(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IIncomingBodyResource> @this);

        }

        /// <summary>
        ///     Represents a future which may eventually return trailers, or an error.
        ///     
        ///     In the case that the incoming HTTP Request or Response did not have any
        ///     trailers, this future will resolve to the empty set of trailers once the
        ///     complete Request or Response body has been received.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IFutureTrailersResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Returns a pollable which becomes ready when either the trailers have
            ///     been received, or an error has occurred. When this pollable is ready,
            ///     the `get` method will return `some`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]future-trailers.subscribe")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.IPoll.IPollableResource> Subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFutureTrailersResource> @self);

            /// <summary>
            ///     Returns the contents of the trailers, or an error which occurred,
            ///     once the future is ready.
            ///     
            ///     The outer `option` represents future readiness. Users can wait on this
            ///     `option` to become `some` using the `subscribe` method.
            ///     
            ///     The outer `result` is used to retrieve the trailers or error at most
            ///     once. It will be success on the first call in which the outer option
            ///     is `some`, and error on subsequent calls.
            ///     
            ///     The inner `result` represents that either the HTTP Request or Response
            ///     body, as well as any trailers, were received successfully, or that an
            ///     error occurred receiving them. The optional `trailers` indicates whether
            ///     or not trailers were present in the body.
            ///     
            ///     When some `trailers` are returned by this method, the `trailers`
            ///     resource is immutable, and a child. Use of the `set`, `append`, or
            ///     `delete` methods will return an error, and the resource must be
            ///     dropped before the parent `future-trailers` is dropped.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]future-trailers.get")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource>?, Wasi.Http.ITypes.ErrorCode>, global::WaaS.ComponentModel.Binding.None>? Get(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFutureTrailersResource> @self);

        }

        /// <summary>
        ///     Represents an outgoing HTTP Response.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IOutgoingResponseResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Construct an `outgoing-response`, with a default `status-code` of `200`.
            ///     If a different `status-code` is needed, it must be set via the
            ///     `set-status-code` method.
            ///     
            ///     * `headers` is the HTTP Headers for the Response.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[constructor]outgoing-response")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IOutgoingResponseResource> OutgoingResponse(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> @headers);

            /// <summary>
            ///     Get the HTTP Status Code for the Response.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-response.status-code")]
            Wasi.Http.ITypes.StatusCode StatusCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingResponseResource> @self);

            /// <summary>
            ///     Set the HTTP Status Code for the Response. Fails if the status-code
            ///     given is not a valid http status code.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-response.set-status-code")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, global::WaaS.ComponentModel.Binding.None> SetStatusCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingResponseResource> @self, Wasi.Http.ITypes.StatusCode @statusCode);

            /// <summary>
            ///     Get the headers associated with the Request.
            ///     
            ///     The returned `headers` resource is immutable: `set`, `append`, and
            ///     `delete` operations will fail with `header-error.immutable`.
            ///     
            ///     This headers resource is a child: it must be dropped before the parent
            ///     `outgoing-request` is dropped, or its ownership is transferred to
            ///     another component by e.g. `outgoing-handler.handle`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-response.headers")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource> Headers(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingResponseResource> @self);

            /// <summary>
            ///     Returns the resource corresponding to the outgoing Body for this Response.
            ///     
            ///     Returns success on the first call: the `outgoing-body` resource for
            ///     this `outgoing-response` can be retrieved at most once. Subsequent
            ///     calls will return error.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-response.body")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IOutgoingBodyResource>, global::WaaS.ComponentModel.Binding.None> Body(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingResponseResource> @self);

        }

        /// <summary>
        ///     Represents an outgoing HTTP Request or Response's Body.
        ///     
        ///     A body has both its contents - a stream of bytes - and a (possibly
        ///     empty) set of trailers, inducating the full contents of the body
        ///     have been sent. This resource represents the contents as an
        ///     `output-stream` child resource, and the completion of the body (with
        ///     optional trailers) with a static function that consumes the
        ///     `outgoing-body` resource, and ensures that the user of this interface
        ///     may not write to the body contents after the body has been finished.
        ///     
        ///     If the user code drops this resource, as opposed to calling the static
        ///     method `finish`, the implementation should treat the body as incomplete,
        ///     and that an error has occurred. The implementation should propagate this
        ///     error to the HTTP protocol by whatever means it has available,
        ///     including: corrupting the body on the wire, aborting the associated
        ///     Request, or sending a late status code for the Response.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IOutgoingBodyResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Returns a stream for writing the body contents.
            ///     
            ///     The returned `output-stream` is a child resource: it must be dropped
            ///     before the parent `outgoing-body` resource is dropped (or finished),
            ///     otherwise the `outgoing-body` drop or `finish` will trap.
            ///     
            ///     Returns success on the first call: the `output-stream` resource for
            ///     this `outgoing-body` may be retrieved at most once. Subsequent calls
            ///     will return error.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]outgoing-body.write")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.IStreams.IOutputStreamResource>, global::WaaS.ComponentModel.Binding.None> Write(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IOutgoingBodyResource> @self);

            /// <summary>
            ///     Finalize an outgoing body, optionally providing trailers. This must be
            ///     called to signal that the response is complete. If the `outgoing-body`
            ///     is dropped without calling `outgoing-body.finalize`, the implementation
            ///     should treat the body as corrupted.
            ///     
            ///     Fails if the body's `outgoing-request` or `outgoing-response` was
            ///     constructed with a Content-Length header, and the contents written
            ///     to the body (via `write`) does not match the value given in the
            ///     Content-Length.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[static]outgoing-body.finish")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Http.ITypes.ErrorCode> Finish(global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IOutgoingBodyResource> @this, global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IFieldsResource>? @trailers);

        }

        /// <summary>
        ///     Represents a future which may eventually return an incoming HTTP
        ///     Response, or an error.
        ///     
        ///     This resource is returned by the `wasi:http/outgoing-handler` interface to
        ///     provide the HTTP Response corresponding to the sent Request.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IFutureIncomingResponseResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Returns a pollable which becomes ready when either the Response has
            ///     been received, or an error has occurred. When this pollable is ready,
            ///     the `get` method will return `some`.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]future-incoming-response.subscribe")]
            global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.IPoll.IPollableResource> Subscribe(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFutureIncomingResponseResource> @self);

            /// <summary>
            ///     Returns the incoming HTTP Response, or an error, once one is ready.
            ///     
            ///     The outer `option` represents future readiness. Users can wait on this
            ///     `option` to become `some` using the `subscribe` method.
            ///     
            ///     The outer `result` is used to retrieve the response or error at most
            ///     once. It will be success on the first call in which the outer option
            ///     is `some`, and error on subsequent calls.
            ///     
            ///     The inner `result` represents that either the incoming HTTP Response
            ///     status and headers have received successfully, or that an error
            ///     occurred. Errors may also occur while consuming the response body,
            ///     but those will be reported by the `incoming-body` and its
            ///     `output-stream` child.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]future-incoming-response.get")]
            global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Http.ITypes.IIncomingResponseResource>, Wasi.Http.ITypes.ErrorCode>, global::WaaS.ComponentModel.Binding.None>? Get(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Http.ITypes.IFutureIncomingResponseResource> @self);

        }

    }
}
