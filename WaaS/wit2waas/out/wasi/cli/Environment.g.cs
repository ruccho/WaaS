// <auto-generated />
#nullable enable

namespace Wasi.Cli
{
    [global::WaaS.ComponentModel.Binding.ComponentInterface(@"environment")]
    public partial interface IEnvironment
    {
        /// <summary>
        ///     Get the POSIX-style environment variables.
        ///     
        ///     Each environment variable is provided as a pair of string variable names
        ///     and string value.
        ///     
        ///     Morally, these are a value import, but until value imports are available
        ///     in the component model, this import function should return the same
        ///     values each time it is called.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"get-environment")]
        global::System.ReadOnlyMemory<(string, string)> GetEnvironment();

        /// <summary>
        ///     Get the POSIX-style arguments to the program.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"get-arguments")]
        global::System.ReadOnlyMemory<string> GetArguments();

        /// <summary>
        ///     Return a path that programs should use as their initial current working
        ///     directory, interpreting `.` as shorthand for this.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"initial-cwd")]
        global::WaaS.ComponentModel.Binding.Option<string> InitialCwd();

    }
}
