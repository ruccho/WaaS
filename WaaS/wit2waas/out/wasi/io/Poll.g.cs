// <auto-generated />
#nullable enable

namespace Wasi.Io
{
    /// <summary>
    ///     A poll API intended to let users wait for I/O events on multiple handles
    ///     at once.
    /// </summary>
    [global::WaaS.ComponentModel.Binding.ComponentInterface(@"poll")]
    public partial interface IPoll
    {
        /// <summary>
        ///     Poll for completion on a set of pollables.
        ///     
        ///     This function takes a list of pollables, which identify I/O sources of
        ///     interest, and waits until one or more of the events is ready for I/O.
        ///     
        ///     The result `list<u32>` contains one or more indices of handles in the
        ///     argument list that is ready for I/O.
        ///     
        ///     This function traps if either:
        ///     - the list is empty, or:
        ///     - the list contains more elements than can be indexed with a `u32` value.
        ///     
        ///     A timeout can be implemented by adding a pollable from the
        ///     wasi-clocks API to the list.
        ///     
        ///     This function does not return a `result`; polling in itself does not
        ///     do any I/O so it doesn't fail. If any of the I/O sources identified by
        ///     the pollables has an error, it is indicated by marking the source as
        ///     being ready for I/O.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"poll")]
        global::System.ReadOnlyMemory<uint> Poll(global::System.ReadOnlyMemory<global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Io.IPoll.IPollableResource>> @in);

        /// <summary>
        ///     `pollable` represents a single I/O event which may be ready, or not.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentResource]
        public partial interface IPollableResource : global::WaaS.ComponentModel.Runtime.IResourceType
        {
            /// <summary>
            ///     Return the readiness of a pollable. This function never blocks.
            ///     
            ///     Returns `true` when the pollable is ready, and `false` otherwise.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]pollable.ready")]
            bool Ready(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Io.IPoll.IPollableResource> @self);

            /// <summary>
            ///     `block` returns immediately if the pollable is ready, and otherwise
            ///     blocks until ready.
            ///     
            ///     This function is equivalent to calling `poll.poll` on a list
            ///     containing only this pollable.
            /// </summary>
            [global::WaaS.ComponentModel.Binding.ComponentApi(@"[method]pollable.block")]
            void Block(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Io.IPoll.IPollableResource> @self);

        }

    }
}
