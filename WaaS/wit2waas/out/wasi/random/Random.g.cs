// <auto-generated />
#nullable enable

namespace Wasi.Random
{
    /// <summary>
    ///     WASI Random is a random data API.
    ///     
    ///     It is intended to be portable at least between Unix-family platforms and
    ///     Windows.
    /// </summary>
    [global::WaaS.ComponentModel.Binding.ComponentInterface(@"random")]
    public partial interface IRandom
    {
        /// <summary>
        ///     Return `len` cryptographically-secure random or pseudo-random bytes.
        ///     
        ///     This function must produce data at least as cryptographically secure and
        ///     fast as an adequately seeded cryptographically-secure pseudo-random
        ///     number generator (CSPRNG). It must not block, from the perspective of
        ///     the calling program, under any circumstances, including on the first
        ///     request and on requests for numbers of bytes. The returned data must
        ///     always be unpredictable.
        ///     
        ///     This function must always return fresh data. Deterministic environments
        ///     must omit this function, rather than implementing it with deterministic
        ///     data.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"get-random-bytes")]
        global::System.ReadOnlyMemory<byte> GetRandomBytes(ulong @len);

        /// <summary>
        ///     Return a cryptographically-secure random or pseudo-random `u64` value.
        ///     
        ///     This function returns the same type of data as `get-random-bytes`,
        ///     represented as a `u64`.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"get-random-u64")]
        ulong GetRandomU64();

    }
}
