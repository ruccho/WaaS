// <auto-generated />
#nullable enable

namespace Wasi.Random
{
    // interface insecure
    /// <summary>
    ///     The insecure interface for insecure pseudo-random numbers.
    ///     
    ///     It is intended to be portable at least between Unix-family platforms and
    ///     Windows.
    /// </summary>
    [global::WaaS.ComponentModel.Binding.ComponentInterface(@"insecure")]
    public partial interface IInsecure
    {
        /// <summary>
        ///     Return `len` insecure pseudo-random bytes.
        ///     
        ///     This function is not cryptographically secure. Do not use it for
        ///     anything related to security.
        ///     
        ///     There are no requirements on the values of the returned bytes, however
        ///     implementations are encouraged to return evenly distributed values with
        ///     a long period.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"get-insecure-random-bytes")]
        global::System.Threading.Tasks.ValueTask<global::System.ReadOnlyMemory<byte>> GetInsecureRandomBytes(ulong @len);

        /// <summary>
        ///     Return an insecure pseudo-random `u64` value.
        ///     
        ///     This function returns the same type of pseudo-random data as
        ///     `get-insecure-random-bytes`, represented as a `u64`.
        /// </summary>
        [global::WaaS.ComponentModel.Binding.ComponentApi(@"get-insecure-random-u64")]
        global::System.Threading.Tasks.ValueTask<ulong> GetInsecureRandomU64();

    }
}
