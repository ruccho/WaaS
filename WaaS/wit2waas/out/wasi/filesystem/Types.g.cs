// <auto-generated />
#nullable enable
namespace Wasi.Filesystem
{
    [global::WaaS.ComponentModel.Binding.ComponentInterface]
    public partial interface Types
    {
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Streams.InputStream>, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.readViaStream(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, ulong offset);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Streams.OutputStream>, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.writeViaStream(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, ulong offset);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Io.Streams.OutputStream>, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.appendViaStream(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.advise(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, ulong offset, ulong length, Wasi.Filesystem.Types.Advice advice);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.syncData(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Filesystem.Types.DescriptorFlags, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.getFlags(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Filesystem.Types.DescriptorType, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.getType(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.setSize(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, ulong size);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.setTimes(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, Wasi.Filesystem.Types.NewTimestamp dataAccessTimestamp, Wasi.Filesystem.Types.NewTimestamp dataModificationTimestamp);
        global::WaaS.ComponentModel.Binding.Result<(global::System.ReadOnlyMemory<byte>, bool), Wasi.Filesystem.Types.ErrorCode> [method]descriptor.read(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, ulong length, ulong offset);
        global::WaaS.ComponentModel.Binding.Result<ulong, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.write(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, global::System.ReadOnlyMemory<byte> buffer, ulong offset);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Filesystem.Types.DirectoryEntryStream>, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.readDirectory(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.sync(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.createDirectoryAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, string path);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Filesystem.Types.DescriptorStat, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.stat(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Filesystem.Types.DescriptorStat, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.statAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, Wasi.Filesystem.Types.PathFlags pathFlags, string path);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.setTimesAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, Wasi.Filesystem.Types.PathFlags pathFlags, string path, Wasi.Filesystem.Types.NewTimestamp dataAccessTimestamp, Wasi.Filesystem.Types.NewTimestamp dataModificationTimestamp);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.linkAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, Wasi.Filesystem.Types.PathFlags oldPathFlags, string oldPath, global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> newDescriptor, string newPath);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Runtime.Owned<Wasi.Filesystem.Types.Descriptor>, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.openAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, Wasi.Filesystem.Types.PathFlags pathFlags, string path, Wasi.Filesystem.Types.OpenFlags openFlags, Wasi.Filesystem.Types.DescriptorFlags flags);
        global::WaaS.ComponentModel.Binding.Result<string, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.readlinkAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, string path);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.removeDirectoryAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, string path);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.renameAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, string oldPath, global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> newDescriptor, string newPath);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.symlinkAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, string oldPath, string newPath);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.None, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.unlinkFileAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, string path);
        bool [method]descriptor.isSameObject(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> other);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Filesystem.Types.MetadataHashValue, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.metadataHash(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self);
        global::WaaS.ComponentModel.Binding.Result<Wasi.Filesystem.Types.MetadataHashValue, Wasi.Filesystem.Types.ErrorCode> [method]descriptor.metadataHashAt(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.Descriptor> self, Wasi.Filesystem.Types.PathFlags pathFlags, string path);
        global::WaaS.ComponentModel.Binding.Result<global::WaaS.ComponentModel.Binding.Option<Wasi.Filesystem.Types.DirectoryEntry>, Wasi.Filesystem.Types.ErrorCode> [method]directoryEntryStream.readDirectoryEntry(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Filesystem.Types.DirectoryEntryStream> self);
        global::WaaS.ComponentModel.Binding.Option<Wasi.Filesystem.Types.ErrorCode> FilesystemErrorCode(global::WaaS.ComponentModel.Runtime.Borrowed<Wasi.Io.Error.Error> err);
    }
}
